import 'dart:convert';
import 'dart:io';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

class CloudinaryService {
  static const String _cloudName = 'dxfnw5mkl';
  static const String _uploadPreset = 'phonkers_profile_upload';

  /// Upload image to Cloudinary and return the secure URL
  static Future<String?> uploadImage(File imageFile) async {
    try {
      final uri = Uri.parse(
        'https://api.cloudinary.com/v1_1/$_cloudName/image/upload',
      );

      final request = http.MultipartRequest('POST', uri)
        ..fields['upload_preset'] = _uploadPreset
        ..files.add(await http.MultipartFile.fromPath('file', imageFile.path));

      final response = await request.send();

      if (response.statusCode == 200) {
        final resStr = await response.stream.bytesToString();
        final Map<String, dynamic> resJson = json.decode(resStr);
        return resJson['secure_url'] as String?;
      } else {
        throw Exception('Upload failed with status ${response.statusCode}');
      }
    } catch (e) {
      debugPrint('Cloudinary upload error: $e');
      rethrow;
    }
  }

  /// Delete image from Cloudinary (optional - requires your API credentials)
  static Future<bool> deleteImage(String publicId) async {
    // This requires API key and secret - implement if needed
    // For now, we'll just return true as images on free tier can stay
    return true;
  }
}

import { auth, currentUser } from "@clerk/nextjs/server";
import { redirect } from "next/navigation";

export default async function DashboardPage() {
  const { userId } = await auth();

  if (!userId) {
    redirect("/sign-in");
  }

  const user = await currentUser();

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-4xl mx-auto">
        <div className="bg-white rounded-2xl shadow-lg p-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            Welcome to Dashboard! ðŸŽ‰
          </h1>
          <p className="text-gray-600 mb-6">
            Hello, {user?.firstName || "Admin"}! You're successfully
            authenticated.
          </p>

          <div className="bg-blue-50 border-2 border-blue-200 rounded-lg p-4">
            <p className="text-blue-900 font-medium">
              âœ… Clerk Authentication is working perfectly!
            </p>
            <p className="text-blue-700 text-sm mt-2">
              Next up: We'll build the full dashboard UI with sidebar, software
              management, and more.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}

